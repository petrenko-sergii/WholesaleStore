<head>
    <meta charset="utf-8">
    <title></title>
    <style>
        .css-serial {
            counter-reset: serial-number;
        }

            .css-serial td:first-child:before {
                counter-increment: serial-number;
                content: counter(serial-number);
            }

        td {
            border: 1px #DDD solid;
            padding: 1px;
            cursor: pointer;
        }

        .selected {
            background-color: #6495ED;
            color: #FFF;
        }

        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }

        .btnShowProductsPage {
            width: 230px;
            background-color: #6495ED;
            border: none;
            color: white;
            padding: 3px 10px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 2px 2px;
            cursor: pointer;
        }

        .btnSmall {
            width: 80px;
            background-color: #6495ED;
            border: none;
            color: white;
            padding: 3px 10px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 2px 2px;
            cursor: pointer;
        }


        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content */
        .modal-content {
            position: relative;
            background-color: #fefefe;
            margin: auto;
            padding: 0;
            border: 1px solid #888;
            width: 80%;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
            -webkit-animation-name: animatetop;
            -webkit-animation-duration: 0.4s;
            animation-name: animatetop;
            animation-duration: 0.4s;
        }

        /* The Close Button */
        .close {
            color: white;
            float: right;
            font-size: 20px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .modal-header {
            padding: 2px 16px;
            background-color: #6495ED;
            color: white;
        }

        .modal-body {
            padding: 2px 16px;
        }

        .modal-footer {
            padding: 2px 16px;
            background-color: #6495ED;
            color: white;
        }
        
    button.relative {
        position: relative;
        left: 300px;
    }
    </style>
</head>

@{
    ViewBag.Title = "ShowProducts";
}
@model WholesaleStore.Models.ProductModel

<form action="@Url.Action("FindProducts", "Product")" method="post" target="_self" id="FormShowProducts">
    <input type="hidden" name="productId" id="hiddenDeletedProductId" />
    <input type="hidden" name="productId" id="hiddenEditProductId" />
    <input type="hidden" name="productId" id="hiddenProductToZeroId" />
    <fieldset>
        <legend>Products</legend>
        <img src="~/Content/Images/Products.jpg" alt="Sample Photo" style="width:735px;height:140px;" />
        <p>
            <strong>Find by name:</strong>
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" class="btnSmall" />
        </p>
        @if (@Model.Products.Count == 0)
        {
            <p style="color: red"><strong>No Products </strong></p>
        }
        else
        {
            <table style="width:60%" id="tableProducts" class="css-serial">
                <tr>
                    <th>#</th>
                    <th>Barcode</th>
                    <th>Category</th>
                    <th>Name</th>
                    <th>Amount</th>
                    <th>Unit</th>
                    <th>Price, grn</th>
                </tr>
                @foreach (var pr in Model.Products)
                {
                    <tr data-productid="@pr.Id">
                        <td align="center"></td>
                        <td align="center">@pr.BarCode</td>
                        <td align="center">@pr.Category.Name</td>
                        <td>@pr.Name</td>
                        <td align="center">@pr.Amount</td>
                        <td align="center">@pr.Unit.Name</td>
                        <td align="center">@pr.Price</td>
                    </tr>
                }
            </table>

            <br />
            <b> Item quantity: @Model.Products.Count </b>
        }
    </fieldset>
</form> @*Products Table*@


<fieldset>
    <legend>Options</legend>
    <button class="btnShowProductsPage" id="btnAdd">Add product</button>
    
    @*Change product amount Button*@
    <button id="btnChangeProductAmount" class="btnShowProductsPage">Change product amount</button>
    @if (ViewData["ErrorMessageEmptyAmountChangeProductId"] != null)
    {
        <b style="color:red">@ViewData["ErrorMessageEmptyAmountChangeProductId"]</b>
    }
    @if (ViewData["ErrorMessageEmptyAmount"] != null)
    {
        <b style="color:red">@ViewData["ErrorMessageEmptyAmount"]</b>
    }

    @if (ViewData["ErrorMessageWrongAmount"] != null)
    {
        <b style="color:red">@ViewData["ErrorMessageWrongAmount"]</b>
    }
    

    <br />
    <button class="btnShowProductsPage" id="btnDelete">Delete product</button>
    @if (ViewData["ErrorMessageEmptyProductId"] != null)
    {
        <b style="color:red">@ViewData["ErrorMessageEmptyProductId"]</b>
    }
    
    <button class="btnShowProductsPage" id="btnZeroAmount">Zero product amount</button>
    @if (ViewData["ErrorMessageEmptyAmountZeroProductId"] != null)
    {
        <b style="color:red">@ViewData["ErrorMessageEmptyAmountZeroProductId"]</b>
    }
    <br />






    <button class="btnShowProductsPage" id="btnEdit">Edit product</button>
    @if (ViewData["ErrorMessageEmptyEditProductId"] != null)
    {
        <b style="color:red">@ViewData["ErrorMessageEmptyEditProductId"]</b>
    }
    

   

       
        
        @*Add product amount Button*@
        <button id="btnAddProductAmount" class="btnShowProductsPage">Add product amount</button>

        @if (ViewData["ErrorMessageEmptyAmountAddProductId"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageEmptyAmountAddProductId"]</b>
        }
        @if (ViewData["ErrorMessageEmptyAddAmount"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageEmptyAddAmount"]</b>
        }

        @if (ViewData["ErrorMessageWrongAddAmount"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageWrongAddAmount"]</b>
        }


        <br />
        @*Set new price Button*@
        <button id="btnNewProductPrice" class="btnShowProductsPage">Set new price</button>
        @if (ViewData["ErrorMessageEmptyPriceProductId"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageEmptyPriceProductId"]</b>
        }
        @if (ViewData["ErrorMessageEmptyPrice"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageEmptyPrice"]</b>
        }

        @if (ViewData["ErrorMessageWrongPrice"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageWrongPrice"]</b>
        }
   



    <!-- Modal content -->
    <div id="DeleteModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                @*<span class="close">Close</span>*@
                <h3>Info</h3>
            </div>
            <div class="modal-body">
                <br />
                <h2 style="color:red;">The Product is deleted!</h2>
                <br />
            </div>
            <div class="modal-footer">
                <h2></h2>
                <h2></h2>
                <br />
            </div>
        </div>
    </div> @*Modal window - Product is deleted!*@

    <!-- The Modal -->
    <div id="myModalChangeProductAmount" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">Close</span>
                <h3>Change product amount</h3>
            </div>
            <div class="modal-body">
                <br />
                <form action="@Url.Action("ChangeProductAmount", "Product")" method="get" target="_self">
                    <input type="hidden" name="productId" id="hiddenProductChangeAmountId" />
                    <b>Enter new amount: </b>&nbsp;
                    <input type="text" name="newAmount" /> &nbsp;&nbsp;&nbsp;
                    <input type="submit" value="Save" onclick="" class="btnSmall">
                </form>
                <br />
            </div>
            <div class="modal-footer">
                <h3>   </h3>
            </div>
        </div>
    </div>

    <div id="myModalAddProductAmount" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <spanaddamount class="close">Close</spanaddamount>
                <h3>Add product amount</h3>
            </div>
            <div class="modal-body">
                <br />
                <form action="@Url.Action("AddProductAmount", "Product")" method="get" target="_self">
                    <input type="hidden" name="productId" id="hiddenProductAddAmountId" />
                    <b>Add amount: </b>&nbsp;
                    <input type="text" name="addAmount" /> &nbsp;&nbsp;&nbsp;
                    <input type="submit" value="Add" onclick="" class="btnSmall">
                </form>
                <br />
            </div>
            <div class="modal-footer">
                <h3>   </h3>
            </div>
        </div>
    </div>

    <div id="myModalNewProductPrice" class="modal">
        <!-- Modal content -->
        <div class="modal-content">
            <div class="modal-header">
                <span class="close">Close</span>
                <h3>Set new product price</h3>
            </div>
            <div class="modal-body">
                <br />
                <form action="@Url.Action("SetNewProductPrice", "Product")" method="get" target="_self">
                    <input type="hidden" name="productId" id="hiddenProductNewPriceId" />
                    <b>Set price: </b>&nbsp;
                    <input type="text" name="newPrice" /> &nbsp;&nbsp;&nbsp;
                    <input type="submit" value="Save" onclick="" class="btnSmall">
                </form>
                <br />
            </div>
            <div class="modal-footer">
                <h3>   </h3>
            </div>
        </div>
    </div>
    <br />
    <br />

    <button id="btnHome" class="btnShowProductsPage">Home</button>
    <button id="btnLogOut" class="btnShowProductsPage">Log out</button>
</fieldset>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    function highlight(e) {
        if (selected[0]) selected[0].className = '';
        e.target.parentNode.className = 'selected';

        var productId = $("tr.selected").attr("data-productid");

        $("#hiddenDeletedProductId").val(productId);
        $("#hiddenEditProductId").val(productId);
        $("#hiddenProductToZeroId").val(productId);
        $("#hiddenProductChangeAmountId").val(productId);
        $("#hiddenProductAddAmountId").val(productId);
        $("#hiddenProductNewPriceId").val(productId);
    }

    var table = document.getElementById('tableProducts'),
    selected = table.getElementsByClassName('selected');
    table.onclick = highlight;

    var modal = document.getElementById('myModalChangeProductAmount');

    // Get the button that opens the modal
    var btn = document.getElementById("btnChangeProductAmount");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks the button, open the modal

    btn.onclick = function () {
        if ($("#hiddenProductChangeAmountId").val()) {
            modal.style.display = "block";
        }
        else {
            document.location = "@Url.Action("ChangeProductAmount", "Product")" + "?newAmount=" + 0;
        }
    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    var modalAddAmount = document.getElementById('myModalAddProductAmount');

    // Get the button that opens the modal
    var btnAddAmount = document.getElementById("btnAddProductAmount");

    // Get the <span> element that closes the modal
    var spanAddAmount = document.getElementsByClassName("close")[1];

    // When the user clicks the button, open the modal
    btnAddAmount.onclick = function () {
        if ($("#hiddenProductAddAmountId").val()) {
            modalAddAmount.style.display = "block";
        }
        else {
            document.location = "@Url.Action("AddProductAmount", "Product")" + "?addAmount=" + 0;;
        }
    }

    // When the user clicks on <span> (x), close the modal
    spanAddAmount.onclick = function () {
        modalAddAmount.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modalAddAmount) {
            modalAddAmount.style.display = "none";
        }
    }

    var modalNewPrice = document.getElementById('myModalNewProductPrice');

    // Get the button that opens the modal
    var btnNewPrice = document.getElementById("btnNewProductPrice");

    // Get the <span> element that closes the modal
    var spanNewPrice = document.getElementsByClassName("close")[2];

    // When the user clicks the button, open the modal
    btnNewPrice.onclick = function () {
        if ($("#hiddenProductNewPriceId").val()) {
            modalNewPrice.style.display = "block";
        }
        else {
            document.location = "@Url.Action("SetNewProductPrice", "Product")" + "?newPrice=" + 0;;
        }
    }

    // When the user clicks on <span> (x), close the modal
    spanNewPrice.onclick = function () {
        modalNewPrice.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modalNewPrice) {
            modalNewPrice.style.display = "none";
        }
    }

    // Get the modalDelete
    var modalDelete = document.getElementById('DeleteModal');

    // Get the button that opens the modal
    var btnDelete = document.getElementById("btnDelete");

    // When the user clicks the button, open the modal
    btnDelete.onclick = function () {
        if ($("#hiddenDeletedProductId").val()) {
            modalDelete.style.display = "block";
            setTimeout(function () { debugger; document.location = "@Url.Action("DeleteProduct", "Product")" + "?productId=" + $("#hiddenDeletedProductId").val(); }, 1000);

        }
        else {
            debugger; document.location = "@Url.Action("DeleteProduct", "Product")";
        }
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modalDelete) {
            modalDelete.style.display = "none";
        }
    }

    //region Add Button
    var btnAdd = document.getElementById("btnAdd");

    btnAdd.onclick = function () {
        document.location = "@Url.Action("AddProduct", "Product")";
    }
    //endregion Add Button

    var btnEdit = document.getElementById("btnEdit");

    // When the user clicks the button, open the modal
    btnEdit.onclick = function () {
        if ($("#hiddenEditProductId").val()) {
            document.location = "@Url.Action("IdentityProduct", "Product")" + "?productId=" + $("#hiddenEditProductId").val();
        }
        else {
            debugger; document.location = "@Url.Action("IdentityProduct", "Product")";
        }
    }


    var btnZeroAmount = document.getElementById("btnZeroAmount");

    // When the user clicks the button, open the modal
    btnZeroAmount.onclick = function () {
        if ($("#hiddenProductToZeroId").val()) {
            document.location = "@Url.Action("ProductAmountToZero", "Product")" + "?productId=" + $("#hiddenProductToZeroId").val();
        }
        else {
            debugger; document.location = "@Url.Action("ProductAmountToZero", "Product")";
        }
    }

    var btnHome = document.getElementById("btnHome");

    btnHome.onclick = function () {
            document.location = "@Url.Action("Index", "Home")";
    }

    var btnLogOut = document.getElementById("btnLogOut");

    btnLogOut.onclick = function () {
        document.location = "@Url.Action("LoginPage", "Login")";
    }
</script>


