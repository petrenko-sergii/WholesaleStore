    <style> 
        .css-serial {
            counter-reset: serial-number; 
        }

        .css-serial td:first-child:before {
            counter-increment: serial-number; 
            content: counter(serial-number); 
         }

         .btnAdd {
            width: 130px;
            background-color: #6495ED;
            border: none;
            color: white;
            padding: 3px 10px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 2px 2px;
            cursor: pointer;
        }

          .btn {
            width: 230px;
            background-color: #6495ED;
            border: none;
            color: white;
            padding: 3px 10px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 2px 2px;
            cursor: pointer;
        }

        table, th, td {
            border: 1px solid black;
            border-collapse: collapse;
        }

        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content */
        .modal-content {
            position: relative;
            background-color: #fefefe;
            margin: auto;
            padding: 0;
            border: 1px solid #888;
            width: 80%;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
            -webkit-animation-name: animatetop;
            -webkit-animation-duration: 0.4s;
            animation-name: animatetop;
            animation-duration: 0.4s;
        }

        /* The Close Button */
        .close {
            color: white;
            float: right;
            font-size: 20px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .modal-header {
            padding: 2px 16px;
            background-color: #6495ED;
            color: white;
        }

        .modal-body {
            padding: 2px 16px;
        }

        .modal-footer {
            padding: 2px 16px;
            background-color: #6495ED;
            color: white;
        }
        

    </style>

@{
    ViewBag.Title = "AddOrderItem";
}

@model WholesaleStore.Models.OrderItemModel

<form action="@Url.Action("SaveOrderItem")" method="post" target="_self">
    <input type="hidden" value="@ViewBag.orderId" name="orderId" />
    <input type="hidden" value="@ViewBag.userId" name="userId" />
    <fieldset>
        <legend>Add items to the order</legend>
        <h4>Order number: @Model.Order.OrderNumber</h4>
        <h4>Customer name: @Model.Order.Customer.Name</h4>
        <h4>Order date/time: @Model.Order.Date</h4>
        <h4>User name: @Model.Order.User.Usertype.Name.ToLower() @Model.Order.User.Name</h4>
        <b> Add product: </b>&nbsp;&nbsp;
        <select size="1" name="productId">
            <option disabled>Choose product</option>
            @foreach (var pr in Model.Products)
            {
                <option value="@pr.Id">@pr.Name - @pr.Price grn; Amount: @pr.Amount </option>
            }
        </select>
        <br />
        <br />
        <b> Amount: </b>&nbsp;
        <input type="text" name="amount" /> &nbsp;
        &nbsp;&nbsp;&nbsp;
        <input type="submit" value="Add to order" class="btnAdd">
        @if (ViewData["ErrorMessageEmptyAmount"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageEmptyAmount"]</b>
        }

        @if (ViewData["ErrorMessageWrongAmount"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageWrongAmount"]</b>
        }
        @if (ViewData["ErrorMessageTooBigAmount"] != null)
        {
            <b style="color:red">@ViewData["ErrorMessageTooBigAmount"]</b>
        }      
        <br />
    </fieldset>

    <fieldset>
        <legend>Order items</legend>
        <style>
            table, th, td {
                border: 1px solid black;
                border-collapse: collapse;
            }
        </style>

        <table class="css-serial" style="width:40%">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Barcode</th>
                    <th>Name</th>
                    <th>Quantity</th>
                    <th>Unit</th>
                    <th>Price</th>
                    <th>Sum</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Order.Items)
                {
                    var sum = (decimal)item.Amount * item.Price;
                    <tr>
                        <td align="center"></td>
                        <td align="center">@item.Product.BarCode</td>
                        <td>@item.Product.Name</td>
                        <td align="center">@item.Amount</td>
                        <td align="center">@item.Product.Unit.Name</td>
                        <td align="center">@item.Price grn</td>
                        <td align="center"> @sum grn</td>
                    </tr>
                }
            </tbody>  
            @if (Model.Order.Items.Count != 0) 
            { 
                <tr>
                    <th colspan="6" align="right" font-weight normal>Total sum:&nbsp;</th>
                    <th>@Model.Order.TotalSum grn</th>
                </tr>                          
            }
        </table>
        <b> Item quantity: @Model.Order.Items.Count </b>
    </fieldset> @*Item table*@
</form>

<fieldset>
    <legend>Options</legend>

    <button class="btn" id="btnSave">Save & Show Order</button>
    <br />
    
    <button class="btn" id="btnDelete">Cancel / Delete Order</button>
    <br />
    <br />

    <form action="@Url.Action("Index", "Home")" method="post" target="_self">
        <input type="submit" value="Home" class="btn" />
    </form>

    <form action="@Url.Action("LoginPage", "Login")" method="post" target="_self">
        <input type="submit" value="Log out" class="btn" />
    </form>
</fieldset>


<!-- Modal content -->
<div id="saveModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">Close</span>
            <h3>Info</h3>
        </div>
        <div class="modal-body">
            <br />
            <h2>The Order is saved!</h2>
            <br />
        </div>
        <div class="modal-footer">
            <h2></h2>
            <h2></h2>
            <br />
        </div>
    </div>
</div> @*Modal window - Order is saved!*@


 <!-- Modal content -->
<div id="DeleteModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            @*<span class="close">Close</span>*@
            <h3>Info</h3>
        </div>
        <div class="modal-body">
            <br />
            <h2 style="color:red;">The Order is deleted / canceled!</h2>
            <br />
        </div>
        <div class="modal-footer">
            <h2></h2>
            <h2></h2>
            <br />
        </div>
    </div>
</div> @*Modal window - The Order is deleted / canceled!*@

<!-- Modal content -->
<div id="modalIsNotSaved" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">Close</span>
            <h3>Info</h3>
        </div>
        <div class="modal-body">
            <br />
            <h3 style="color:red;">No Items in the Order!</h3>
            <h2 style="color:red;">The Order is not saved!</h2>
            <br />
        </div>
        <div class="modal-footer">
            <h2></h2>
            <h2></h2>
            <br />
        </div>
    </div>
</div> @*Modal window - Order is Not Saved!*@

<script>
    var modal = document.getElementById('saveModal');
    var modalIsNotSaved = document.getElementById('modalIsNotSaved');

    var btnSave = document.getElementById("btnSave");

    // When the user clicks the button, open the modal
    btnSave.onclick = function () {
        if(@Model.Order.Items.Count != 0)
        {
            modal.style.display = "block";
            setTimeout(function () { debugger; document.location = "@Url.Action("ShowOrderItems", "OrderItem")" + "?orderId=" + @ViewBag.orderId }, 1000);
        }
        else
        {
            modalIsNotSaved.style.display = "block";
            setTimeout(function () { debugger; document.location = "@Url.Action("CheckOrderIsEmpty", "Order")" + "?orderId=" + @ViewBag.orderId }, 1000);
        }
        
    }

    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
        if (event.target == modalIsNotSaved) {
            modalIsNotSaved.style.display = "none";
        }
    }

    var modalDelete = document.getElementById('DeleteModal');

    // Get the button that opens the modal
    var btnDelete = document.getElementById("btnDelete");

    // When the user clicks the button, open the modal
    btnDelete.onclick = function () {
        modalDelete.style.display = "block";
        setTimeout(function () { debugger; document.location = "@Url.Action("DeleteOrder", "Order")" + "?orderId=" + @ViewBag.orderId }, 1000);
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modalDelete) {
            modalDelete.style.display = "none";
        }
    }
</script>

